#summary Let's test some android "hello world"
#labels Tooltips

http://developer.android.com/guide/tutorials/hello-world.html

= Eclipse =

http://www.eclipse.org/downloads/

http://developer.android.com/intl/fr/guide/developing/eclipse-adt.html

Ctrl-Shift-O (Cmd-Shift-O, on Mac). This is an Eclipse shortcut that identifies missing packages based on your code and adds them for you

= Android SDK example =

http://senior.ceng.metu.edu.tr/2009/praeda/2009/01/11/a-simple-restful-client-at-android/

{{{
package praeda.muzikmekan;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

public class RestClient {

	private static String convertStreamToString(InputStream is) {
		/*
		 * To convert the InputStream to String we use the BufferedReader.readLine()
		 * method. We iterate until the BufferedReader return null which means
		 * there's no more data to read. Each line will appended to a StringBuilder
		 * and returned as String.
		 */
		BufferedReader reader = new BufferedReader(new InputStreamReader(is));
		StringBuilder sb = new StringBuilder();

		String line = null;
		try {
			while ((line = reader.readLine()) != null) {
				sb.append(line + "\n");
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				is.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		return sb.toString();
	}


	/* This is a test function which will connects to a given
	 * rest service and prints it's response to Android Log with
	 * labels "Praeda".
	 */
	public static void connect(String url)
	{

		HttpClient httpclient = new DefaultHttpClient();


		// Prepare a request object
		HttpGet httpget = new HttpGet(url); 

		// Execute the request
		HttpResponse response;
		try {
			response = httpclient.execute(httpget);
			// Examine the response status
			Log.i("Praeda",response.getStatusLine().toString());

			// Get hold of the response entity
			HttpEntity entity = response.getEntity();
			// If the response does not enclose an entity, there is no need
			// to worry about connection release

			if (entity != null) {

				// A Simple JSON Response Read
				InputStream instream = entity.getContent();
				String result= convertStreamToString(instream);
				Log.i("Praeda",result);

				// A Simple JSONObject Creation
				JSONObject json=new JSONObject(result);
				Log.i("Praeda","<jsonobject>\n"+json.toString()+"\n</jsonobject>");

				// A Simple JSONObject Parsing
				JSONArray nameArray=json.names();
				JSONArray valArray=json.toJSONArray(nameArray);
				for(int i=0;i<valArray.length();i++)
				{
					Log.i("Praeda","<jsonname"+i+">\n"+nameArray.getString(i)+"\n</jsonname"+i+">\n"
							+"<jsonvalue"+i+">\n"+valArray.getString(i)+"\n</jsonvalue"+i+">");
				}

				// A Simple JSONObject Value Pushing
				json.put("sample key", "sample value");
				Log.i("Praeda","<jsonobject>\n"+json.toString()+"\n</jsonobject>");

				// Closing the input stream will trigger connection release
				instream.close();
			}


		} catch (ClientProtocolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

}}}

http://developerlife.com/tutorials/?p=369

{{{
@Override
public void onCreate(Bundle icicle) {
  super.onCreate(icicle);
  try {

    Log.i(Global.TAG, "System.property(user.dir)=" + System.getProperty("user.dir"));

    // download an image from the web... in the background
    {
      Runnable getImage = new Runnable() {
        public void run() {
          // get the image from http://developerlife.com/theblog/wp-content/uploads/2007/11/news-thumb.png
          // save it here (user.dir/FILENAME)
          // file is saved here on emulator - /data/data/com.developerlife/files/file.png
          try {
            Log.i(Global.TAG, "MainDriver: trying to download and save PNG file to user.dir");
            HttpClient client = new HttpClient();
            GetMethod get = new GetMethod("http://developerlife.com/theblog/wp-content/uploads/2007/11/news-thumb.png");
            client.executeMethod(get);
            byte[] bRay = get.getResponseBody();

            FileOutputStream fos = openFileOutput(Global.FILENAME, Activity.MODE_WORLD_WRITEABLE);
            fos.write(bRay);
            fos.flush();
            fos.close();
            Log.i(Global.TAG, "MainDriver: successfully downloaded PNG file to user.dir");
          }
          catch (Exception e) {
            Log.e(Global.TAG, "MainDriver: could not download and save PNG file", e);
          }

        }
      };
      new Thread(getImage).start();
    }

  }
  catch (Exception e) {
    Log.e(Global.TAG, "ui creation problem", e);
  }

}

}}}



AndroidManifest.xml

<activity android:name=".MyThemeTest" android:label="@string/app_name" android:theme="@style/Theme.MyTheme">

res/values/styles.xml

{{{
<?xml version="1.0" encoding="utf-8"?>
<resources>
<style name="Theme" parent="android:Theme"></style>
<style name="Theme.MyTheme">
    <item name="android:windowBackground">@drawable/blue_filled_box</item>
</style>
</resources>
}}}

res/drawable/blue_filled_box.xml

{{{
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#0000FF"/>
    <stroke android:width="3dp" color="0000FF80"/>
    <corners android:radius="3dp"/>
    <padding android:left="10dp" android:top="10dp"
        android:right="10dp" android:bottom="10dp" />
</shape>
}}}
