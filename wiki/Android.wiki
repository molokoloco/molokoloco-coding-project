#summary Let's test some android "hello world"
#labels Tooltips

http://developer.android.com/guide/tutorials/hello-world.html

= Eclipse =

http://www.eclipse.org/downloads/

http://developer.android.com/intl/fr/guide/developing/eclipse-adt.html

Ctrl-Shift-O (Cmd-Shift-O, on Mac). This is an Eclipse shortcut that identifies missing packages based on your code and adds them for you

= Android SDK example =

Notification

{{{
Button button = (Button) findViewById(R.id.short_notify);
button.setOnClickListener(new Button.OnClickListener() {
    public void onClick(View v) {
        // Note also that we use the version of makeText that takes a resource id (R.string.short_notification_text).  There is also
        // a version that takes a CharSequence if you must construct the text yourself.
        Toast.makeText(NotifyWithText.this, R.string.short_notification_text,
            Toast.LENGTH_SHORT).show();
    }
});
}}}

Android UNIT

{{{
px
    Pixels - corresponds to actual pixels on the screen.
in
    Inches - based on the physical size of the screen.
mm
    Millimeters - based on the physical size of the screen.
pt
    Points - 1/72 of an inch based on the physical size of the screen.
dp
    Density-independent Pixels - an abstract unit that is based on the physical density of the screen. These units are relative to a 160 dpi screen, so one dp is one pixel on a 160 dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion. Note: The compiler accepts both "dip" and "dp", though "dp" is more consistent with "sp".
sp
    Scale-independent Pixels - this is like the dp unit, but it is also scaled by the user's font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and user's preference. 

}}}

http://developerlife.com/tutorials/?p=369

{{{
@Override
public void onCreate(Bundle icicle) {
  super.onCreate(icicle);
  try {

    Log.i(Global.TAG, "System.property(user.dir)=" + System.getProperty("user.dir"));

    // download an image from the web... in the background
    {
      Runnable getImage = new Runnable() {
        public void run() {
          // get the image from http://developerlife.com/theblog/wp-content/uploads/2007/11/news-thumb.png
          // save it here (user.dir/FILENAME)
          // file is saved here on emulator - /data/data/com.developerlife/files/file.png
          try {
            Log.i(Global.TAG, "MainDriver: trying to download and save PNG file to user.dir");
            HttpClient client = new HttpClient();
            GetMethod get = new GetMethod("http://developerlife.com/theblog/wp-content/uploads/2007/11/news-thumb.png");
            client.executeMethod(get);
            byte[] bRay = get.getResponseBody();

            FileOutputStream fos = openFileOutput(Global.FILENAME, Activity.MODE_WORLD_WRITEABLE);
            fos.write(bRay);
            fos.flush();
            fos.close();
            Log.i(Global.TAG, "MainDriver: successfully downloaded PNG file to user.dir");
          }
          catch (Exception e) {
            Log.e(Global.TAG, "MainDriver: could not download and save PNG file", e);
          }

        }
      };
      new Thread(getImage).start();
    }

  }
  catch (Exception e) {
    Log.e(Global.TAG, "ui creation problem", e);
  }

}

}}}

== Style & drawable ==

AndroidManifest.xml

{{{
<activity android:name=".MyThemeTest" android:label="@string/app_name" android:theme="@style/Theme.MyTheme">
}}}

res/values/styles.xml

{{{
<?xml version="1.0" encoding="utf-8"?>
<resources>
<style name="Theme" parent="android:Theme"></style>
<style name="Theme.MyTheme">
    <item name="android:windowBackground">@drawable/blue_filled_box</item>
</style>
</resources>
}}}

res/drawable/blue_filled_box.xml

{{{
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#0000FF"/>
    <stroke android:width="3dp" color="0000FF80"/>
    <corners android:radius="3dp"/>
    <padding android:left="10dp" android:top="10dp"
        android:right="10dp" android:bottom="10dp" />
</shape>
}}}

public void printAlert(String message) {  