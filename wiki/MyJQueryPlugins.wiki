#summary Personnal contribution to jQuery
#labels Featured

= Add Or Switch Stylesheet =


Source here : http://home.b2bweb.fr/js/jquery.style.js

Official : http://plugins.jquery.com/project/AddOrSwitchStylesheet

Use cookie manager from : http://plugins.jquery.com/project/cookie

Plugin who load (at the first demand) and switch stylesheet, with cookie :
  * Manage links to change style
  * Add stylesheet to head if not exist
  * If already exist, switch style with the disabled attribute
  * Prevent style flickering with a little timeout (between one is disabled and other not totaly loaded)
  * Prevent changing other styles who are not related to theme
  * Stock and autoload user style preference, with a cookie

===HTML===

{{{
<head>
     <link rel="stylesheet" type="text/css" media="all" href="css/styles.css" id="themeDefault"/>
     ...
</head>
<body>
<div>
     <ul>
          <li><a href="javascript:void(0);" rel="css/styles.css" class="css">Original</a></li>
          <li><a href="javascript:void(0);" rel="css/style_light.css" class="css">Blanc</a></li>
          <li><a href="javascript:void(0);" rel="css/style_dark.css" class="css">Sombre</a></li>
     </ul>
</div>
</body>
}}}

===JAVASCRIPT===

{{{
(function($){
     $.fn.extend({
          styleDisable: function (disabled) {
               setTimeout(function () {
                    $(disabled).each(function () {
                         $(this).attr('disabled', 'disabled');
                    });
               }, 250);
          },
          styleLoad: function (stylePath) {
               $('head').append('<link rel="stylesheet" type="text/css" href="' + stylePath + '" id="theme' + Math.random() + '"/>');
          },
          styleSwitch: function (stylePath) {
               var exist = false;
               var disabled = [];
               $('link[@rel*=style][id]').each(function () {
                    if (stylePath == $(this).attr('href')) {
                         $(this).removeAttr('disabled');
                         exist = true;
                    }
                    else disabled.push(this);
               });
               if (exist == false) styleLoad(stylePath);
               $.fn.styleDisable(disabled);
               $.cookie('css', stylePath, {
                    expires: 365,
                    path: '/'
               });
          },
          styleInit: function () {
               if ($.cookie('css')) {
                    var isSet = false;
                    $('link[rel*=style][id]').each(function () {
                         if ($.cookie('css') == $(this).attr('href')) isSet = true;
                    });
                    if (isSet == false) $.fn.styleSwitch($.cookie('css'));
               }
               return $(this).click(function (event) {
                    event.preventDefault();
                    $.fn.styleSwitch($(this).attr('rel'));
                    $(this).blur();
               });
          }
     });
})(jQuery);

// $('a.css').styleInit(); // That it's :)

}}}

----
=Plugin for a text range select=

===USE CASE===

{{{
$('#q').selectRange(0, 10);
$('#q').selectRange(searchVal.indexOf('{'), (searchVal.indexOf('}')+1));
}}}

===JAVASCRIPT===

Source here : http://plugins.jquery.com/project/selectRange

{{{
$.fn.selectRange = function(start, end) {
    var e = document.getElementById($(this).attr('id')); // I don't know why... but $(this) don't want to work today :-/
    if (!e) return;
    else if (e.setSelectionRange) { e.focus(); e.setSelectionRange(start, end); } /* WebKit */ 
    else if (e.createTextRange) { var range = e.createTextRange(); range.collapse(true); range.moveEnd('character', end); range.moveStart('character', start); range.select(); } /* IE */
    else if (e.selectionStart) { e.selectionStart = start; e.selectionEnd = end; }
};
}}}

----
=Plugin to center an element into an other=

===USE CASE===

{{{
$('#mainDiv').center();
$(window).bind('resize', function() {
    $('#mainDiv').center({transition:300});
});
}}}

===JAVASCRIPT===

Source here : http://plugins.jquery.com/project/autocenter

{{{
(function($){
     $.fn.extend({
          center: function (options) {
               var options =  $.extend({ // Default values
                    inside:window, // element, center into window
                    transition: 0, // millisecond, transition time
                    minX:-900, // pixel, minimum left element value
                    minY:-900, // pixel, minimum top element value
                    vertical:true, // booleen, center vertical
                    withScrolling:true, // booleen, take care of element inside scrollTop when minX < 0 and window is small or when window is big 
                    horizontal:true // booleen, center horizontal
               }, options);
               return this.each(function() {
                    var props = {position:'absolute'};
                    if (options.vertical) {
                         var top = ($(options.inside).height() - $(this).outerHeight()) / 2;
                         if (options.withScrolling) top += $(options.inside).scrollTop() || 0;
                         top = (top > options.minY ? top : options.minY);
                         $.extend(props, {top: top+'px'});
                    }
                    if (options.horizontal) {
                          var left = ($(options.inside).width() - $(this).outerWidth()) / 2;
                          if (options.withScrolling) left += $(options.inside).scrollLeft() || 0;
                          left = (left > options.minX ? left : options.minX);
                          $.extend(props, {left: left+'px'});
                    }
                    if (options.transition > 0) $(this).animate(props, options.transition);
                    else $(this).css(props);
                    return $(this);
               });
          }
     });
})(jQuery);
}}}

===SHORT VERSION===

{{{
(function($){
     $.fn.extend({
          center: function () {
		return this.each(function() {
			var top = ($(window).height() - $(this).outerHeight()) / 2;
			var left = ($(window).width() - $(this).outerWidth()) / 2;
			$(this).css({position:'absolute', margin:0, top: (top > 20 ? top : 20)+'px', left: (left > 0 ? left : 0)+'px'});
		});
	}
     });
})(jQuery);
}}}