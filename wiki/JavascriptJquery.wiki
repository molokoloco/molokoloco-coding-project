#labels Tooltips
ev#summary My JQuery personnal notes

*Sommaire :*

<wiki:toc max_depth="3" />

----

= JQUERY TIPS =

This is some fonctions i take from the web, jQuery DOC, ... and others i made...

== FAQ JQUERY ==

  * http://api.jquery.com
  * http://docs.jquery.com
  * http://jqueryui.com
  * http://plugins.jquery.com
  * http://labs.impulsestudios.ca/downloads/impulse_studios-jquery_cheat_sheet-1.0.pdf
    * jQuery Cheat Sheet [http://www.b2bweb.fr/bonus/jQueryCheatSheet-1-4.png Image PNG]

[http://labs.impulsestudios.ca/downloads/impulse_studios-jquery_cheat_sheet-1.0.pdf http://www.b2bweb.fr/bonus/jQueryCheatSheet-1-4-small.png]

== Inclure jQuery ==

{{{
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
}}}

ou

{{{
<script src="http://code.jquery.com/jquery-latest.js"></script>
}}}

== jQuery INIT ==

{{{

$(function(){ /*...*/ });

$(document).ready(function(){
    $('a').click(function(event){
        event.preventDefault();
    });
});

$(window).bind('load', function()  { /* ... */ });

}}}

== Easy TIPS ==

{{{

$('#p').html('Test');
$('#p, #td').addClass('bigText');
$('body').attr('onload')
$('#quicktimePlayer').empty();
$('#quicktimePlayer').append(plug);
$('#element_id').click(/*...*/)
$('.class').click(/*...*/)
$(document.getElementById('el'))
$(document).ready(/*...*/)
$(window).load(/*...*/)
$('ul').find('li:last-child');
$('p', document).size();
$('p[a]').hide();
$('a[(text()="Suivante")]').show();
$(xml.responseXML);
$('title', xml.responseXML); // Finds all title elements within an XML document
$('p').height()
$('/html/body//p').attr({align:'center'});
$('body').css({'overflow' : 'hidden'});
$('button:gt(1)').attr('disabled','disabled'); // Disables buttons greater than the 1st button.
$('ul li:last').after('<li>Added text ' + p + '</li>');
$("div:contains('John')").css('text-decoration', 'underline');
$(':input'); // Matches all input, textarea, select and button elements
$('form input:text') // iniput type=text
$('form > *'); // formChildren 
if ($(this).is(':first-child')) {}
if ( $(this).hasClass('protected') )
$('div').show().fadeOut('slow');
$("#myselect").val();
$("#myselect option:selected").text();
$("span").fadeIn("slow");
if($(element).is(":visible") == "true") {}
$('#target div:not(#exclude)').hide();
var foundin = $('*:contains("some string bla bla")');
$('#myTable tr:last').after('<tr>...</tr>');
var elements = $('#someid input[type=sometype][value=somevalue]').get();
$('a').slice(0,10);
$.each($('form#formEdit').serializeArray(), function(i, o){ siteObj[o.name] = o.value; });

$(xml).find("article").each(function(i) { alert($(this).find("titre").text()); });
$.each({a:'A', b:'B'}, function(key, val) { console.log('%s => %s', key, val); });
this.columns.each(function(item) { this.buildHeader(item); }, this);

var css_link = $('<link>', {rel: 'stylesheet', type: 'text/css', href: 'style.css'});
css_link.appendTo('head');

var $myInput = $('input#search');
$myInput
    .data('valInit', $myInput.val())
    .focus(function() { if ($(this).val() == $(this).data('valInit')) $(this).val(''); })
    .blur(function() { if ($(this).val() == '') $(this).val($(this).data('valInit')); });

$(window).load(function(){
	if (window.location.hash) {
		var destination = $(window.location.hash).offset().top;
		$('html, body').animate({scrollTop:destination}, 1600);
	}
});

var popUp = function(message, delay) {
	delay = delay || 5000;
	$('<div />')
		.addClass('ui-loader ui-overlay-shadow ui-corner-all')
		.css({opacity: 0.96, top: $(window).scrollTop() + 100})
		.html('<h1>Message...</h1><p>'+message+'</p>')
		.appendTo('body')
		.hide().fadeIn(200)
		.delay(delay)
		.fadeOut(400, function(){ $(this).remove(); });
};

}}}

= SAMPLE PLUGIN STRUCTURE =

  * http://www.queness.com/post/112/a-really-simple-jquery-plugin-tutorial
  * http://docs.jquery.com/Plugins/Authoring

{{{

// Déclaration d'un nouveau plugin pour étendre les fonctions ($.fn) de jQuery

(function($){

 	$.fn.extend({ 
 		
		// Pass the options variable to the function
 		pluginname: function(options) {

			// Set the default values, use comma to separate the settings, example:
			var defaults = {
				padding: 20,
				mouseOverColor : '#000000',
				mouseOutColor : '#ffffff'
			}
				
			var options =  $.extend(defaults, options);

    			return this.each(function() {
				// Accès arguments appel de la function
				var o = options;
				alert(o.padding);
				// Acces à l'élément sur lequel la fonction s'applique
				var e = $(this);
				alert(e.width());
    			});
    		}
	});
	
})(jQuery);

// Appel du plugin
$('div#monId').pluginname({padding:0, mouseOutColor:'#A4A4A4'});

}}}

== BINDABLES EVENTS ==

{{{

/*
	bind() blur() change() click() dblclick() error() focus() hover() 
	keydown() keypress() keyup() load() mousedown() mousemove() mouseout() mouseover() mouseup() 
	one() ready() resize() scroll() select() submit() toggle() trigger() unbind() unload() live() die()
*/


$('#btnG').hide();
var showButton = function(e) { 
	$(document).unbind('mousemove', showButton);
	$('#btnG').show();
	$('#q').focus();
};
$(document).mousemove(showButton);

$(window).bind('resize', function() {
    resizeFrame();
});

$('div').one('click', function() { /*... Only first time*/ });

$('div#fox img, div#ie img, div#saf img').hover(
	function(event) { $(this).stop(true, true).animate({marginTop:'0px'}, {duration:500}); }, 
	function(event) { $(this).stop(true, true).animate({marginTop:'-28px'}, {duration:500}); }
);

$('.thumbLien').hover(
    function () {
        var imgId = '#site_img_'+$(this).attr('id').split('_')[2];
        cvi_glossy.modify($(imgId)[0], {shadow:66});
    }, 
    function () {
        var imgId = '#site_img_'+$(this).attr('id').split('_')[2];
        cvi_glossy.modify($(imgId)[0], {shadow:20});
    }
);

$('#foo').bind({
    click: function() {
        // do something
    },
    mouseover: function() {
        // do something
    },
    mouseout: function() {
        // do something
    }
});

// Listen to events from a particular context

$("table").delegate("td", "hover", function(){
    $(this).toggleClass("active");
});

// "return false" is actually doing three very separate things when you call it:
//   1. event.preventDefault();
//   2. event.stopPropagation();
//   3. Stops callback execution and returns immediately when called.

$('a').click(function (e) {
    // here your code
    e.preventDefault(); // cancel default behavior
});

$('#myImage').attr('src', 'image.jpg').load(function() {
	alert('Image Loaded');
}); 


// Horloge
var pad = function(s) { return (s < 10 ? '0'+s : s); }
var timer = setInterval(function() {
	var dt = new Date();
	$('#horloge').html(pad(dt.getHours())+':'+pad(dt.getMinutes())+':'+pad(dt.getSeconds()));
}, 1000);


// When clicking on an image we keep track of the index (child item index)
$('#thumbs_container').delegate('li','click tap',function(){
	current = $(this).index();
});

}}}

== SHORTCUT MEMO ==

{{{

if (/^[\w\d\_\.]{4,}$/.test($('#username').attr('value'))) alert('Ok');

if (! (ext && /^(jpg|png|jpeg|gif)$/i.test(ext))) return;

if (/(_on)/.test($(this).attr('src'))) $(this).attr({src: $(this).attr('src').split('_on.png')[0]+'.png'});

var imgId = '#site_img_'+$(this).attr('id').split('_')[2];

var domaine = $(this).attr('href').split('/')[2].replace(/(\.www)/g, '');

var loadJs = function(src) { $('head').append('<' + 'script type="text/javascript" src="'+src+'"></sc'+'ript>'); }; 

$('img').attr({
    src: '/images/hat.gif',
    alt: 'jQuery Logo'
});
$('div').text($('img').attr('alt'));

$('div.example').css('width', function(index) {
  return index * 50;
});

if ($('#myDiv').is('.pretty')) $('#myDiv').show();

$('#myDiv:visible').animate({left: '+=200px'}, 'slow');

$('button').each(function()  {
    var el = $(this);
    var elId = el.attr('id');
});

var targetOffset = $('li.selectedShow').offset().top;
targetOffset = targetOffset-14;
$('html,body').animate({scrollTop: targetOffset},5);

$('div.scrollable:eq(1) div.items div').click(function() { 
    $(this).fadeOut().fadeIn();   
});

if (!$(event.target).is('div') && !$(event.target).parents().is('div')) { // outside div
    $('div').hide();
}

setTimeout('initCar();', 500);

$('div').attr('id', function(arr) { return 'div-id' + arr; }).each(function() { $('span', this).html('(ID = <b>' + this.id + '</b>)'); });

$('p').eq(0).css('color', 'red') // First

$('<div><p>Hello</p></div>').appendTo('body');

$(document).keypress(function (e) {
	//$('#duree').text(e.which);
	toggleMenu();
});

$(document.body).click(function () {
    $(document.body).append($('<div>'));
    var n = $('div').length;
}).trigger('click');

$(document.body).click(function () {
    $('div').each(function (i) {
        if (this.style.color != 'blue') this.style.color = 'blue';
        else this.style.color = '';
    });
});

$('li').slice(2, 4).css('background-color', 'green');  

// Toggle all checkboxes
var tog = false; // or true if they are checked on load
$('a').click(function() {
    $("input[type=checkbox]").attr("checked",!tog);
    tog = !tog;
});

// index of an element
$("ul > li").click(function () {
    var index = $(this).prevAll().length;
});

// see if an image is loaded
var imgsrc = 'img/image1.png';
$('<img/>').load(function(){alert('image loaded');}).error(function(){alert('error loading image');}).attr('src', imgsrc);

// Storing DATAS with elements...
var adiv = $("div").get(0);
jQuery.data(adiv, "test", { first: 16, last: "pizza!" });
$("span:first").text(jQuery.data(adiv, "test").first);
$("span:last").text(jQuery.data(adiv, "test").last);

// Or
$("div").data('storeName', 'stockValue');
alert($("div").data("storeName"));
$("div").removeData();
$("div").remove();


// When you bind a "live" event it will bind also to future elements
$("p").live("click", function(){
    $(this).after("<p>Another paragraph!</p>");
});

}}}

== INSERT ELEMENT ==

{{{

/*
<ul class="sortUlLink">
	<li class="sortLink"><a href="http://image-swirl.googlelabs.com">Swirl</a></li>
	<li class="sortLink"><a href="http://translate.google.fr/">Traductions</a></li>
	<!--// Insert Here //-->
	<li class="liAddLink"><a class="addLink" href="javascript:void(0);" onclick="add(this);">[+]</a></li>
</ul>
*/

var add = function(elm) {
	var liParent = $(elm).parent();
	$('<li class="sortLink"><a href="#">Something</a></li>').insertBefore(liParent);
};

}}}

== KEYS ==

{{{

var event2key = {'97':'a', '98':'b', '99':'c', '100':'d', '101':'e', '102':'f', '103':'g', '104':'h', '105':'i', '106':'j', '107':'k', '108':'l', '109':'m', '110':'n', '111':'o', '112':'p', '113':'q', '114':'r', '115':'s', '116':'t', '117':'u', '118':'v', '119':'w', '120':'x', '121':'y', '122':'z', '37':'left', '39':'right', '38':'up', '40':'down', '13':'enter'};

$(document).keypress(function(e) {
	$('.l').each(function() {
		if (event2key[e.which] != '' && $(this).html().charAt(0).toLowerCase() ==  event2key[e.which]) $(this).attr('class', 'l hightlight');
		else $(this).attr('class', 'l');
	});

        switch(event2key[(e.which || e.keyCode)]) {
		case 'left': break;
		case 'right': break;
		case 'up': break;
		case 'down': break;
		case 'enter': break;
                case 'a': break;
	}
});

}}}

== BROWSERS ==

{{{

$('#browser').html( 'You are using the browser: ' + $.browser.browser() );
$.browser.version.string();
$.browser.version.number();
$.browser.OS();
var firefox = $.browser.firefox();

}}}

==ARRAY Build in functions ==

{{{

jQuery.isArray( obj )   //  Returns: Boolean // Added in jQuery 1.3 Determine if the parameter passed is an array.
jQuery.isFunction( obj )   //  Returns: Boolean // Determine if the parameter passed is a Javascript function object.
jQuery.trim( str )
jQuery.param({width:160, height:105}); // width=160&height=105
jQuery.each( object, callback )   //  Returns: Object // A generic iterator function
jQuery.extend( deep, target, object1, objectN )   //  Returns: Object // Extend one object with one or more others, returning the modified object.
jQuery.grep( array, callback, invert )   //  Returns: Array // Filter items out of an array, by using a filter function.
jQuery.makeArray( obj )   //  Returns: Array // Turns anything into a true array.
jQuery.map( array, callback )   //  Returns: Array // Translate all items in an array to another array of items.
jQuery.inArray( value, array )   //  Returns: Number // Determine the index of the first parameter in the Array (-1 if not found).
jQuery.merge( first, second )   //  Returns: Array // Merge two arrays together.
jQuery.unique( array )   //  Returns: Array // Remove all duplicate elements from an array of elements. Note that this only works on arrays of DOM elements
 
// --------------------------------------------------------------- //
 
var x = [];
x.push(1);
var x = [0, 3, 1, 2];
x.reverse() // [2, 1, 3, 0]
x.join(' - ') // '2 - 1 - 3 - 0'
x.pop() // [2, 1, 3]
x.unshift(-1) // [-1, 2, 1, 3]
x.shift() // [2, 1, 3]
x.sort() // [1, 2, 3]
x.splice(1, 2) // [2, 3]
 
// --------------------------------------------------------------- //
 
x = Math.ceil(6.01); //donne x = 7
x = Math.floor(6.01); //donne x = 6
x = Math.round(6.01); //donne x = 6
x = Math.max(6,7.25); //donne x = 7.25
x = Math.min(6,7.25); //donne x = 6
x = Math.pow(3,3); //donne x = 27
x = Math.random(); //donne x = 0.6489534931546957

}}}

== ANIMATE ==

  * http://www.robertpenner.com/easing/easing_demo.html
  * http://www.learningjquery.com/2009/02/quick-tip-add-easing-to-your-animations

{{{

$('#myDiv').animate(
    { opacity: 0 }, // what we are animating
    {
        duration: 'fast', // how fast we are animating
        easing: 'swing', // the type of easing
        complete: function() { // the callback
            alert('done');
            $(this).addClass('done');
        }
    }
);

$('div#mydiv').slideUp(300).delay(800).fadeIn(400);


/* Emulating 3D with CSS...
#
# .photoflat {  
#     -moz-transform: scale(1) rotate(0deg) translate(0px, 0px) skew(-21deg, 10deg);  
#     transform-origin: 0% 0%;  
#     -webkit-transform: scale(1) rotate(0deg) translate(0px, 0px) skew(-21deg, 10deg);  
#     -moz-box-shadow:0px 1px 3px #333333 ;  
#     -webkit-box-shadow:0px 1px 3px #333333;  
#     box-shadow:0px 1px 3px #333333;  
#     margin-left:-43px;  
#     border:1px solid white;  
#     position:relative;  
# }  
*/

$(this).css('-moz-transform', 'scale(' + dist + ') skew(' + skew2 +'deg, 0deg)');  
$(this).css('-webkit-transform', 'scale(' + dist + ') skew(' + skew2 +'deg, 0deg)');  


// --------------------------------------------------------------- //
 
$(this).hide('puff', {}, 1000);
 
/*
	Effects that can be used with Show/Hide/Toggle:
		Blind - Blinds the element away or shows it by blinding it in.
		Clip - Clips the element on or off, vertically or horizontally.
		Drop - Drops the element away or shows it by dropping it in.
		Explode - Explodes the element into multiple pieces.
		Fold - Folds the element like a piece of paper.
		Puff - Scale and fade out animations create the puff effect.
		Slide - Slides the element out of the viewport.
		Scale - Shrink or grow an element by a percentage factor.
 
	Effects that can be only used stand-alone:
		Bounce - Bounces the element vertically or horizontally n-times.
		Highlight - Highlights the background with a defined color.
		Pulsate - Pulsates the opacity of the element multiple times.
		Shake - Shakes the element vertically or horizontally n-times.
		Size - Resize an element to a specified width and height.
		Transfer - Transfers the outline of an element to another.
*/


// Be carefull when use animate...
$page6Now.stop().animate({width: '20%'}, 200);

// jQuery automaticcaly put overflow:hidden no element..
// to override this... put in CSS :

overflow: visible !important;

}}}

== XPATH ==

{{{

$('/html/body//p').attr({align:'center'});


:first          //  Returns: Array<Element> Matches the first selected element.
:last           //  Returns: Array<Element> Matches the last selected element.
:not(selector)  //  Returns: Array<Element(s)> Filters out all elements matching the given selector.
:even           //  Returns: Array<Element(s)> Matches even elements, zero-indexed.
:odd            //  Returns: Array<Element(s)> Matches odd elements, zero-indexed.
:eq(index)      //  Returns: Array<Element> Matches a single element by its index.
:gt(index)      //  Returns: Array<Element(s)> Matches all elements with an index above the given one.
:lt(index)      //  Returns: Array<Element(s)> Matches all elements with an index below the given one.
:header         //  Returns: Array<Element(s)> Matches all elements that are headers, like h1, h2, h3 and so on.
:animated       //  Returns: Array<Element(s)> Matches all elements that are currently being animated.

}}}

== Elements methodes ==

{{{

$('a:first').offset();

/*

offset()//  Returns: Object{top,left} // Get the current offset of the first matched element, in pixels, relative to the document.
position()//  Returns: Object{top,left} // Gets the top and left position of an element relative to its offset parent.
scrollTop()//  Returns: Integer // Gets the scroll top offset of the first matched element.
scrollTop(val)//  Returns: jQuery // When a value is passed in, the scroll top offset is set to that value on all matched elements.
scrollLeft()//  Returns: Integer // Gets the scroll left offset of the first matched element.
scrollLeft(val)//  Returns: jQuery // When a value is passed in, the scroll left offset is set to that value on all matched elements.

height()//  Returns: Integer // Get the current computed, pixel, height of the first matched element.
height(val)   //  Returns: jQuery // Set the CSS height of every matched element.
width()//  Returns: Integer // Get the current computed, pixel, width of the first matched element.
width(val)//  Returns: jQuery // Set the CSS width of every matched element.
innerHeight()//  Returns: Integer // Gets the inner height (excludes the border and includes the padding) for the first matched element.
innerWidth()//  Returns: Integer // Gets the inner width (excludes the border and includes the padding) for the first matched element.
outerHeight(margin)//  Returns: Integer // Gets the outer height (includes the border and padding by default) for the first matched element.
outerWidth(margin)//  Returns: Integer // Get the outer width (includes the border and padding by default) for the first matched element.

*/

// To get the width and height of the whole page (document)

var pageWidth = $(document).width();
var pageHeight = $(document).height();

// To get the width and height of the viewport (window)

var viewportWidth = $(window).width();
var viewportHeight = $(window).height();

}}}

== PARSING XML (IE compatible) ==

{{{

var xmlParse = function (xml) {
	 if ($.browser.msie) {  // IE !!!
		 var xmlDoc = new ActiveXObject("Microsoft.XMLDOM");  
		 xmlDoc.loadXML(xml);  
		 xml = xmlDoc;  
	 }
	$(xml).find("article").each(function(i) {
		$('#news').append($(this).find("titre").text());
	});
};

$(document).ready(function(){
	$.ajax({
		type: 'GET',
		url: './xml/parisien.xml',
		cache: true,
		processData: true,
		dataType: ($.browser.msie) ? 'text' : 'xml',
		//error: function(xml) { db('error()'); },
		success: function(xml) { xmlParse(xml); }
	});
});

}}}

== AJAX AND JSON ==

{{{

$.getJSON(
    "http://api.flickr.com/services/feeds/photos_public.gne?tags=cat&tagmode=any&format=json&jsoncallback=?",
    function(data){
        $.each(data.items, function(i,item){
            $("<img/>").attr("src", item.media.m).appendTo("#images");
            if ( i == 3 ) return false;
        });
    }
);

// --------------------------------------------------------------- //
// DISTANT JSON // http://blog.jaysalvat.com/articles/comprendre-jsonp-et-acces-de-donnees-a-distance-en-javascript.php

<?php    
$json = "{ data: 'Plein de données utiles' }"; 

if (isset($_GET['callback'])) echo $_GET['callback'].'('.$json.');'; 
else echo $json; 

?> 
<script>
$(function() { 
	$.ajax({ 
		dataType:'jsonp', 
		url: 'http://www.monsitedistant.com/api.php', 
		data: { param:'hello' }, 
		success:function(response) { 
			alert("Réponse : "+ response.data); 
		},
		error: function(XMLHttpRequest, textStatus, errorThrown) { 
			console.log('JSON error :(', XMLHttpRequest, textStatus, errorThrown);
		} 
	}); 
});
</script>

// --------------------------------------------------------------- //

var req = $.ajax({
    type: 'POST',
    url: 'some.php',
    cache: false,
    data: 'name=John&location=Boston',
    success: function(msg){
		
        alert( 'Data Saved: ' + msg );
    }
});

//Cancel the Ajax Request ?
req.abort()

$.post('test.php', { name: 'John', time: '2pm' }, function(data){
    alert('Data Loaded: ' + data);
});

$.post('test.php', { func: 'getNameAndTime' }, function(data){
    alert(data.name); // John
    console.log(data.time); //  2pm
}, 'json');

var html = $.ajax({
    url: 'some.php',
    async: false
}).responseText;

$.ajax({
    url: 'page.php',
    processData: false,
    data: [/*create xml document*/],
    success: handleResponse
});

var obj = jQuery.parseJSON('{"name":"Larry King", "age": "5000"}');
alert(obj.name);


}}}

== Somes Functions ... ==

{{{

// Get URL parameters values

$.extend({
	getUrlVars: function() {
		var vars = {};
		var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) { vars[key] = value; });
		return vars;
	}
});

var name = $.getUrlVars()['name'];


// --------------------------------------------------------------- //
// scale elements to fit box

(function($){
  $.fn.extend({
    fluwi: function(opt){
        var variate = ((opt.variate!= undefined)?opt.variate:0);
        var contWidth = this.outerWidth();
        var boxWidth = opt.minWidth;
        var counted = Math.floor(contWidth/boxWidth);
        var extra = contWidth-boxWidth*counted;
        var eachOne = extra/counted;
        $(opt.boxQuery).css("width", (parseInt(boxWidth)+(eachOne))-variate);
    }
  });
})(jQuery);

// The plugin call code

$('#mydiv').fluwi({
        minWidth: 200, //pixels
        variate: 2, //pixels
        boxQuery: 'li' //class name or div name, or selector for elements that are resizing
});

// MENU
/*
<ul id="menu">
  <li class="menu">Sub 1
    <ul>
      <li>test 1</li>
      <li>test 2</li>
      <li>test 3</li>
      <li>test 4</li>
    </ul>
  </li>
  <li class="menu">Sub 2
    <ul>
      <li>test 1</li>
      <li>test 2</li>
      <li>test 3</li>
      <li>test 4</li>
    </ul>
  </li>
</ul>
*/

// Code

$(document).ready(function() {
  var toggle = function(direction, display) {
    return function() {
      var self = this;
      var ul = $("ul", this);
      if( ul.css("display") == display && !self["block" + direction] ) {
        self["block" + direction] = true;
        ul["slide" + direction]("slow", function() {
          self["block" + direction] = false;
        });
      }
    };
  }
  $("li.menu").hover(toggle("Down", "none"), toggle("Up", "block"));
  $("li.menu ul").hide();
});


// Fetch Links FavIcons
$('.l').hover(
	function(){
		var domaine = $(this).attr('href').split('/')[2].replace(/(\.www)/g, '');
		$(this).html($(this).html()+' <img class="ico" width="16" height="16" src="http://www.google.com/s2/favicons?domain='+domaine+'"/>');
	},
	function(){
		var html = $(this).html().split('<')[0];
		$(this).html(html);
	}
);

}}}

== Mouse event ==

{{{

var div = $('div.sc_menu');
var divWidth = div.width();
var ul = $('ul.sc_menu');
var lastLi = ul.find('li:last-child');
var ulPadding = 15;

div.mousemove(function(e){
    var ulWidth = lastLi[0].offsetLeft + lastLi.outerWidth() + ulPadding;
    var left = (e.pageX - div.offset().left) * (ulWidth-divWidth) / divWidth;
    div.scrollLeft(left);
});

}}}

== Gesture (Managing touch event) ==

  * http://plugins.jquery.com/project/jGesture

{{{

var makeGesture = function() {
    document.onselectstart = function() { return false; }; // ie
    document.onmousedown = function() { return false; }; // mozilla
    $('html').gesture(
        function(gs){
            //db('Gesture : ' + gs.getName() + ' : ' + gs.moves);
            if (gs.moves.length % 5 == 0) {
                if(gs.getName() == 'topleft' || gs.getName() == 'left' || gs.getName() == 'bottomleft') window.api.nextPage();
                if (gs.getName() == 'topright' || gs.getName() == 'right' || gs.getName() == 'bottomright') window.api.prevPage();
            }
        }, {repeat: true, continuesmode: true, mindistance:30}
    );
};

}}}

== Widget container ==

{{{

(function($) {
    // Widget container plugin
    $.fn.widgetContainer = function() {
        this.each(function() {
            // Vars
            var wc = $(this);

            // Set events
            wc.find('#add').click(function(e) { if (e) e.preventDefault(); add(wc) });
        });
    }

    // Add a widget to the container
    function add(wc) {
        var widget = $($.fn.widget.template);
        widget
            .appendTo(wc)
            .fadeIn('slow')
            .widget(wc);
    }

    // Widget
    (function() {
        // Widget plugin
        $.fn.widget = function(container) {
            this.each(function() {
                // Vars
                var w = $(this);
                w.parent = container;

                // Set events
                w.find('form').submit(function(e) { if (e) e.preventDefault(); submit(w) });
                w.find('.remove').click(function(e) { if (e) e.preventDefault(); remove(w) });
            });
        }
        $.fn.widget.template = '<div class="widget"><form action="" method="POST"><input type="text" value=""/><input type="submit" value="Action!"/><a href="#" class="remove">Remove</a></form></div>';

        // Remove widget
        function remove(w) {
            w.remove();
        }

        // Submit widget data
        function submit(w) {
            w.css('background', 'red');
            $.post('/', w.find('form').serialize(), function(data) {
                w.find(':text').val((new Date()).toString());
                w.parent.fadeOut();
                setTimeout(function() { w.parent.fadeIn() }, 500);
            });
        }
    })();
})(jQuery);


// Main
$(function() {
    $('.widgetContainer').widgetContainer();
});

}}}

== Widget with jQuery LOADER ==

http://alexmarandon.com/articles/web_widget_jquery/

{{{

(function() {

// Localize jQuery variable
var jQuery;

/******** Load jQuery if not present *********/
if (window.jQuery === undefined || window.jQuery.fn.jquery !== '1.4.2') {
    var script_tag = document.createElement('script');
    script_tag.setAttribute("type","text/javascript");
    script_tag.setAttribute("src",
        "http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js");
    script_tag.onload = scriptLoadHandler;
    script_tag.onreadystatechange = function () { // Same thing but for IE
        if (this.readyState == 'complete' || this.readyState == 'loaded') {
            scriptLoadHandler();
        }
    };
    // Try to find the head, otherwise default to the documentElement
    (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(script_tag);
} else {
    // The jQuery version on the window is the one we want to use
    jQuery = window.jQuery;
    main();
}

/******** Called once jQuery has loaded ******/
function scriptLoadHandler() {
    // Restore $ and window.jQuery to their previous values and store the
    // new jQuery in our local jQuery variable
    jQuery = window.jQuery.noConflict(true);
    // Call our main function
    main(); 
}

/******** Our main function ********/
function main() { 
    jQuery(document).ready(function($) { 
        /******* Load CSS *******/
        var css_link = $("<link>", { 
            rel: "stylesheet", 
            type: "text/css", 
            href: "style.css" 
        });
        css_link.appendTo('head');          

        /******* Load HTML *******/
        var jsonp_url = "http://alpage.org/cgi-bin/webwidget_tutorial.py?callback=?";
        $.getJSON(jsonp_url, function(data) {
          $('#example-widget-container').html("This data comes from another server: " + data.html);
        });
    });
}

})(); // We call our anonymous function immediately

}}}

== REGEX ==

http://www.jquery.info/spip.php?article91

{{{

// Sélectionne tous les éléments dont l'id commence par une voyelle :
$(':regex(id,^[aeiou])');

// Sélectionne tous les divs dont la classe contient un chiffre :
$('div:regex(class,[0-9])');

// Sélectionne toutes les balises script dont la source contient jQuery :
$('script:regex(src,jQuery)');

// Oui, je sais que le dernier exemple peut être fait avec les sélecteur d'attributs CSS3. C'est juste un exemple...

Note : toutes les recherches sont insensibles à la casse ; vous pouvez changer ça en retirant le drapeau "i" dans le plugin.

Ce plugin vous permet aussi d'interroger les styles CSS avec des expressions régulières, par exemple :
// Sélectionne tous les éléments dont la largeur est comprise entre 100 et 300 pixels :
$(':regex(css:width, ^[1-3]\\d{2}px$)');

// Sélectionne tous les divs qui ne sont pas en display: block :
$('div:not(:regex(css:display, ^block$))');

De plus, vous pouvez interroger les chaînes "data" ajoutées aux éléments au travers de la méthode "data" de jQuery :
// Ajouter une propriété data à toutes les images (c'est juste un exemple) :
$('img').each(function(){
$(this).data('extension', $(this)[0].src.match(/\.(.{1,4})$/)[1]);
});

// Sélectionner toutes les images avec une extension PNG ou JPG :
$('img:regex(data:extension, png|jpg)');

}}}

== Selector (Advanced) ==

http://www.jquery.info/spip.php?article82

{{{
:external
// Vérifie si les liens sont externes
// (Ne fonctionne que pour les éléments qui ont un href) :
$.extend($.expr[':'],{
external: function(a,i,m) {
if(!a.href) {return false;}
return a.hostname && a.hostname !== window.location.hostname;
}
});

// Utilisation :
$('a:external'); // Sélectionne toutes les ancres qui pointent vers une page ou un site externe.

:inView
// Vérifier si l'élément est actuellement dans la zone de vue (viewport) :
$.extend($.expr[':'],{
inView: function(a) {
var st = (document.documentElement.scrollTop || document.body.scrollTop),
ot = $(a).offset().top,
wh = (window.innerHeight && window.innerHeight < $(window).height()) ? window.innerHeight : $(window).height();
return ot > st && ($(a).height() + ot) < (st + wh);
}
});

// Utilisation :
$('div:inView'); // Sélectionne tous les éléments div qui sont dans la zone de vue actuelle

}}}

== Code isolation ==

{{{

// Enclose all our code within an anonymous function and we call that function.
// The variables we create in our functions won’t interfere with the rest of the
page.

var foo = "Hello World!";
document.write("<p>Before our anonymous function foo means '" + foo + '".</p>');

(function() {
    // The following code will be enclosed within an anonymous function
    var foo = "Goodbye World!";
    document.write("<p>Inside our anonymous function foo means '" + foo + '".</p>');
})(); // We call our anonymous function immediately

document.write("<p>After our anonymous function foo means '" + foo + '".</p>');

}}}

== jQUery version 1.4 ==

Parmi les changements et améliorations apportées dans la version 1.4 :

  * de nombreuses améliorations pour les fonctions Ajax et les données manipulées (sérialisation, parsing, json), 
  * de nouvelles méthodes pour le parcours des éléments (first, last, eq...),
  * une création rapide d'éléments avec la fonction jQuery, attributs et événements inclus,
  * des fonctions .css(), .attr() et équivalentes plus évoluées (permettant l'usage d'un appel de fonction),
  * des fonctions d'accélération (easing) par propriété CSS dans les animations,
  * un appel multiple à .bind() possible, pour plusieurs types d'événements distincts,
  * .proxy() pour s'assurer de la pérennité de this dans une fonction, 
  * de nouveaux événements : focusin et focusout, équivalents à focus et blur mais qui remontent dans la hiérarchie du DOM (qui bubblent)
  * .live() supporte désormais tous les événements (à l'exception des cas particuliers ready, blur, et focus), 
  * de nouvelles méthodes : .detach(), .unwrap(),
  * de nouvelles files d'attente avec .delay(), .queue() et .clearQueue(),
  * de nouvelles fonctions de parcours : .index(), .has, .nextUntil(), .prevUntil(), parentsUntil() et des améliorations pour .add(), .closest(),
  * les callbacks sont possibles sur les fonctions DOM,
  * et bien d'autres perfectionnements...


= LITTLES FUNCTIONS FOR QUICK USE =

{{{

// SIMPLE DEBUG :)
var db = function(x) { 'console' in window && console.log.call(console, arguments); };

// Other one...
var db = function(something) { if (!('console' in window)) return; if (arguments.length > 1) { for (var i=0, length=arguments.length; i<length; i++ ) db(arguments[i]); return; } var info = ''; if (typeof something == 'string' || typeof something == 'number') info += '\t'+something.valueOf(); else if (typeof something == 'boolean') info += '\t'+( something ? 'true' : 'false'); else { for (var key in something) { if (typeof something[key] != 'function') info += '\t'+key+' <'+typeof something[key]+'> '+something[key]+'\n'; } } console.info('db('+typeof something+')'); console.log(info); };

var die = function(mess) { throw(( mess ? mess : "JS says that you killing him softly : Oh my god moonWalker is down...")); };

var trim = function(string) { return string.replace(/^\s+|\s+$/g, ''); };
var escapeURI = function(url) { if (encodeURIComponent) return encodeURIComponent(url); else if (encodeURI) return encodeURI(url); else if (escape) return escape(url); else return url; };
var event2key = {'97':'a', '98':'b', '99':'c', '100':'d', '101':'e', '102':'f', '103':'g', '104':'h', '105':'i', '106':'j', '107':'k', '108':'l', '109':'m', '110':'n', '111':'o', '112':'p', '113':'q', '114':'r', '115':'s', '116':'t', '117':'u', '118':'v', '119':'w', '120':'x', '121':'y', '122':'z'};
var pad = function(s) { return (s < 10 ? '0'+s : s); };
var addslashes = function (str) { return (str+'').replace(/([\\"'])/g, "\\$1").replace(/\u0000/g, "\\0"); };
// index.html?name=foo -> var name = getUrlVars()[name]; 
var getUrlVars = function() { var vars = {}; var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m, key, value) { vars[key] = value; }); return vars; };
// sites['link'].sort($.objSortByTitle);
var objSortByTitle = function (a, b) { var x = a.title.toLowerCase(); var y = b.title.toLowerCase(); return ((x < y) ? -1 : ((x > y) ? 1 : 0)); }; 
// loadJs('http://other.com/other.js'); // For external link
var loadJs = function(src) { var s = document.createElement('script'); s.setAttribute('type', 'text/javascript'); s.setAttribute('src', src); document.getElementsByTagName('head')[0].appendChild(s); };
// getScript('./other.js', function() { ok(); });
var getScript = function(src, callback) { $.ajax({dataType:'script', async:false, cache:true, url:src, success:function(response) { if (callback && typeof callback == 'function') callback(); }}); };

}}}