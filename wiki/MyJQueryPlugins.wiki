#summary Personnal contribution to jQuery
#labels Featured

=== UPDATED ! *Sources are now on Github :* https://github.com/molokoloco/FRAMEWORK/tree/master/jquery.plugins ===
<br />
----

*Au sommaire :*

<a href="https://github.com/molokoloco/FRAMEWORK/" title="See source code on GITHUB..." target="_blank"><img src="http://www.b2bweb.fr/wall/img/github-ribbon.png" width="100" height="100" alt="Fork me on GitHub" align="right"><wiki:toc max_depth="1" />


----
=Center element into an other=

===USE CASE===

{{{
$('#mainDiv').center();
$(window).bind('resize', function() {
    $('#mainDiv').center({transition:300});
});
}}}

===JQUERY PLUGIN===

Source here : http://plugins.jquery.com/project/autocenter

{{{
(function($){
     $.fn.extend({
          center: function (options) {
               var options =  $.extend({ // Default values
                    inside:window, // element, center into window
                    transition: 0, // millisecond, transition time
                    minX:0, // pixel, minimum left element value
                    minY:0, // pixel, minimum top element value
                    withScrolling:true, // booleen, take care of the scrollbar (scrollTop)
                    vertical:true, // booleen, center vertical
                    horizontal:true // booleen, center horizontal
               }, options);
               return this.each(function() {
                    var props = {position:'absolute'};
                    if (options.vertical) {
                         var top = ($(options.inside).height() - $(this).outerHeight()) / 2;
                         if (options.withScrolling) top += $(options.inside).scrollTop() || 0;
                         top = (top > options.minY ? top : options.minY);
                         $.extend(props, {top: top+'px'});
                    }
                    if (options.horizontal) {
                          var left = ($(options.inside).width() - $(this).outerWidth()) / 2;
                          if (options.withScrolling) left += $(options.inside).scrollLeft() || 0;
                          left = (left > options.minX ? left : options.minX);
                          $.extend(props, {left: left+'px'});
                    }
                    if (options.transition > 0) $(this).animate(props, options.transition);
                    else $(this).css(props);
                    return $(this);
               });
          }
     });
})(jQuery);

$('#myDiv').center();

}}}

===SHORT VERSION===

{{{
(function($){
     $.fn.extend({
          center: function () {
		return this.each(function() {
			var top = ($(window).height() - $(this).outerHeight()) / 2;
			var left = ($(window).width() - $(this).outerWidth()) / 2;
			$(this).css({position:'absolute', margin:0, top: (top > 0 ? top : 0)+'px', left: (left > 0 ? left : 0)+'px'});
		});
	}
     });
})(jQuery);

$('#myDiv').center();
}}}


===VERY SHORT VERSION===

{{{
$('#myDiv').css({top:'50%',left:'50%',margin:'-'+($('#myDiv').height() / 2)+'px 0 0 -'+($('#myDiv').width() / 2)+'px'});
}}}

----

= Add Or Switch Stylesheet =

Ressources :
  * Source here : http://home.b2bweb.fr/js/jquery.style.js
  * Official : http://plugins.jquery.com/project/AddOrSwitchStylesheet
  * Use cookie manager from : http://plugins.jquery.com/project/cookie

Plugin who load (at the first demand) and switch stylesheet, with cookie :
  * Manage links to change style
  * Add stylesheet to head if not exist
  * If already exist, switch style with the disabled attribute
  * Prevent changing styles who are not related to theme : No modification on styles without id attribute
  * Prevent changing other styles who are not related to theme
  * Stock and autoload user style preference, with a cookie

===HTML===

{{{
<head>
     <link rel="stylesheet" type="text/css" media="all" href="css/styles.css" id="themeDefault"/>
     ...
</head>
<body>
<div>
     <ul>
          <li><a href="javascript:void(0);" rel="css/styles.css" class="css">Original</a></li>
          <li><a href="javascript:void(0);" rel="css/style_light.css" class="css">Blanc</a></li>
          <li><a href="javascript:void(0);" rel="css/style_dark.css" class="css">Sombre</a></li>
     </ul>
</div>
</body>
}}}

===JQUERY PLUGIN===

{{{
(function($){
     $.fn.extend({
          styleDisable: function (disabled) {
               setTimeout(function () {
                    $(disabled).each(function () {
                         $(this).attr('disabled', 'disabled');
                    });
               }, 250);
          },
          styleLoad: function (stylePath) {
               $('head').append('<link rel="stylesheet" type="text/css" href="' + stylePath + '" id="theme' + Math.random() + '"/>');
          },
          styleSwitch: function (stylePath) {
               var exist = false;
               var disabled = [];
               $('link[@rel*=style][id]').each(function () {
                    if (stylePath == $(this).attr('href')) {
                         $(this).removeAttr('disabled');
                         exist = true;
                    }
                    else disabled.push(this);
               });
               if (exist == false) $.fn.styleLoad(stylePath);
               $.fn.styleDisable(disabled);
               $.cookie('css', stylePath, {
                    expires: 365,
                    path: '/'
               });
          },
          styleInit: function () {
               if ($.cookie('css')) {
                    var isSet = false;
                    $('link[rel*=style][id]').each(function () {
                         if ($.cookie('css') == $(this).attr('href')) isSet = true;
                    });
                    if (isSet == false) $.fn.styleSwitch($.cookie('css'));
               }
               return $(this).click(function (event) {
                    event.preventDefault();
                    $.fn.styleSwitch($(this).attr('rel'));
                    $(this).blur();
               });
          }
     });
})(jQuery);

// $('a.css').styleInit(); // That it's :)

}}}

----

=Select a text range (input/textarea)=

===USE CASE===

{{{
$('#q').selectRange(0, 10);
$('#q').selectRange(searchVal.indexOf('{'), (searchVal.indexOf('}')+1));
}}}

===JQUERY PLUGIN===

Source here : http://plugins.jquery.com/project/selectRange

{{{
$.fn.selectRange = function(start, end) {
    var e = document.getElementById($(this).attr('id')); // I don't know why... but $(this) don't want to work today :-/
    if (!e) return;
    else if (e.setSelectionRange) { e.focus(); e.setSelectionRange(start, end); } /* WebKit */ 
    else if (e.createTextRange) { var range = e.createTextRange(); range.collapse(true); range.moveEnd('character', end); range.moveStart('character', start); range.select(); } /* IE */
    else if (e.selectionStart) { e.selectionStart = start; e.selectionEnd = end; }
};
}}}

----

=Get browser CSS style name properties (-Moz -Webkit, ... CSS support) =

A function to get browser specific CSS style name properties...
eg. "MozBorderRadius" or "WebkitTransform" ...

===USE CASE===

{{{
var cssTransform = cssPrefix('transform');
if (cssTransform ) {
    var cssProp = {};
    cssProp['border'] = '1px solid rgba(0, 0, 0, .5)';
    cssProp[cssTransform] = 'rotate(20deg)';
    cssProp[cssPrefix('border-radius')] = '5px'; // eg. "MozBorderRadius"
    $('#myDiv').css(cssProp);
}
}}}

===JQUERY "ADD-ON"...===

Playground here : http://jsfiddle.net/molokoloco/f6Z3D/

{{{
String.prototype.camelize = function() {
    var tmp = '';
    var words = this.split('-');
    for (var i in words) tmp += words[i].toLowerCase().charAt(0).toUpperCase() + words[i].slice(1);
    return tmp;
};

var cssPrefixString = null;
var cssPrefix = function(propertie) {
    if (cssPrefixString !== null) return cssPrefixString + propertie.camelize();
    var e = document.createElement('div');
    var prefixes = ['', 'Moz', 'Webkit', 'O', 'ms', 'Khtml']; // Various supports...
    for (var i in prefixes) {
        if ((i == 0 && typeof e.style[propertie] != 'undefined') || typeof e.style[prefixes[i] + propertie.camelize()] != 'undefined') {
            cssPrefixString = prefixes[i];
            return prefixes[i] + propertie.camelize();
        }
    }
    return false;
};
}}}

----

=Disabling element selection=

===USE CASE===

{{{
$('*').disableTextSelect();
}}}

===JQUERY PLUGIN===

{{{

$.fn.disableTextSelect = function () {
	return this.each(function () {
		$(this).css({'-webkit-user-select':'none', '-moz-user-select':'none','user-select':'none'});
	})
};
$.fn.enableTextSelect = function () {
	return this.each(function () {
		$(this).css({'-webkit-user-select':'', '-moz-user-select':'','user-select':''});
	})
};

}}}

= Others =

{{{
$.fn.extend({

	selectRange: function(start, end) { // $('#myInput').selectRange(searchVal.indexOf('{'), (searchVal.indexOf('}')+1))
		var e = document.getElementById($(this).attr('id')); // I don't know why... but $(this) don't want to work today :-/
		if (!e) return;
		else if (e.setSelectionRange) { e.focus(); e.setSelectionRange(start, end); } /* WebKit */ 
		else if (e.createTextRange) { var range = e.createTextRange(); range.collapse(true); range.moveEnd('character', end); range.moveStart('character', start); range.select(); } /* IE */
		else if (e.selectionStart) { e.selectionStart = start; e.selectionEnd = end; }
	},
	
	center: function (parent) { // I have added the (expanded) source here : http://plugins.jquery.com/project/autocenter
		return this.each(function() {		  
			var top = ( (parent ? $(this).closest(parent).height() : $(window).height()) - $(this).outerHeight()) / 2;
			var left = ( (parent ? $(this).closest(parent).width() : $(window).width()) - $(this).outerWidth()) / 2;
			$(this).css({position:'absolute', margin:0, top: (top > 0 ? top : 0)+'px', left: (left > 0 ? left : 0)+'px'});
		 });
	},

	styleSwitch: function (stylePath) { // I have added the (expanded) source here : http://plugins.jquery.com/project/AddOrSwitchStylesheet
		var exist = false, disabled = [];
		$('link[@rel*=style][id]').each(function () {
			if (stylePath == $(this).attr('href')) { $(this).removeAttr('disabled'); exist = true; }
			else disabled.push(this);
		});
		if (exist === false) $('head').append('<link rel="stylesheet" type="text/css" href="'+stylePath+'" id="theme'+Math.random()+'"/>');
		setTimeout(function () { $(disabled).each(function () { $(this).attr('disabled', 'disabled'); }); }, 900);
		if ($.cookie) $.cookie('css', stylePath, {expires: 365, path: '/'});
	},

	styleInit: function () {
		if ($.cookie && $.cookie('css')) {
			var isSet = false;
			$('link[rel*=style][id]').each(function () { if ($.cookie('css') == $(this).attr('href')) isSet = true; });
			if (isSet === false) $.fn.styleSwitch($.cookie('css'));
		}
		return $(this).click(function (event) {
			event.preventDefault();
			$.fn.styleSwitch($(this).attr('rel'));
			$(this).blur();
		});
	},

	myToggle: function() {
		return this.each(function(i){
			var src = $(this).attr('src');
			if (/(_on)/.test(src)) $(this).attr({src: src.split('_on.png')[0]+'_off.png'}).toggleClass('selected', true);
			else $(this).attr({src: src.split('_off.png')[0]+'_on.png'}).toggleClass('selected', false);
			//console.log($(this).data('desc'));
		});
	},

	shuffle: function() {
		var allElems = this.get(),
			getRandom = function(max) {
				return Math.floor(Math.random() * max);
			},
			shuffled = $.map(allElems, function(){
				var random = getRandom(allElems.length),
					randEl = $(allElems[random]).clone(true)[0];
				allElems.splice(random, 1);
				return randEl;
		   });
		this.each(function(i){
			$(this).replaceWith($(shuffled[i]));
		});
		return $(shuffled);
	},

	smartresize: function(fn) {
		return fn ? this.bind('smartresize', fn ) : this.trigger('smartresize', ['execAsap']);
	},
// Cross browsers CSS rotate
        rotate: function(val) { // $('div').rotate('90deg');
            return this.each(function() {
                var rotate = 'rotate('+val+')';
                return $(this).css({'-moz-transform':rotate, '-webkit-transform':rotate, '-ms-transform':rotate, '-o-transform':rotate, transform:rotate});
            });
        },
        
        // Distribute elements clockwise inside a box
        circalise: function(options) { // $('div').circalise({targets:'div.unit'});
            options = $.extend({
                targets          :'> *', // childs elements to distribute inside this box
                rotateTargets    :false,
                startAngle       :270, // 270deg, start at top center (like a clock)
                xRadius          :null, // default radius to the radius of the box, minus target width
                yRadius          :null
            }, options || {});
            
            return this.each(function() {  
                var $this = $(this),
                    thisW = parseInt($this.innerWidth(), 10),
                    thisH = parseInt($this.innerHeight(), 10),
                    $targets = $this.find(options.targets),
                    increase = (Math.PI * 2) / $targets.length, // Rad cheeseCake  
                    angle = Math.PI * (options.startAngle / 180); // convert from DEG to RAD
                $targets.each(function() {
                    var $target = $(this),
                        xCenter = (thisW - parseInt($target.outerWidth(), 10)) / 2,
                        yCenter = (thisH - parseInt($target.outerHeight(), 10)) / 2,
                        xRadius = (options.xRadius || options.xRadius === 0 ? options.xRadius : xCenter),
                        yRadius = (options.yRadius || options.yRadius === 0 ? options.yRadius : yCenter),
                        params = {
                            left: xRadius * Math.cos(angle) + xCenter,
                            top: yRadius * Math.sin(angle) + yCenter
                        };
                    $target.css(params);
                    if (options.rotateTargets)
                        $target.rotate((Math.atan2(params.top-yCenter, params.left-xCenter)+(Math.PI/2))+'rad'); // (Math.PI/2) == 90deg in rad : rotate to keep tangent
                    angle += increase;
                });
                return $this;
            });
        }
});



$.getRand = function(miin, maax) {
	return parseInt(miin + (Math.random() * (maax - miin)), 10);
};

// Convert % to (int)px
$.getSize = function(size, ratioWidth) {
	if (size && /\%/.test(size))
		size = (parseInt(size, 10) / 100) * ratioWidth;
	return parseInt(size, 10);
};

// Inspired by my old work here http://goo.gl/hL3om
$.getBrowser = (function() { // Closure for putting result in cache
	var userAgentStr = navigator.userAgent.toLowerCase();
	var browsers = { // Various CSS prefix for browsers...
		firefox     :'Moz',
		applewebkit :'Webkit',
		webkit      :'Webkit',
		opera       :'O',
		msie        :'ms', // lower
		Konqueror   :'Khtml'
	};
	for (var prefix in browsers)
		if (userAgentStr.indexOf(prefix) !== -1)
			return browsers[prefix];
	return false;
})();

// $.cssPrefix('Transform') return 'MozTransform' or 'msTransform' or ...
// See http://jsfiddle.net/molokoloco/f6Z3D/
$.cssPrefixString = {};
$.cssPrefix = function(propertie) {
	if ($.cssPrefixString[propertie] || $.cssPrefixString[propertie] === '') return $.cssPrefixString[propertie] + propertie;
	var e = document.createElement('div');
	var prefixes = ['', 'Moz', 'Webkit', 'O', 'ms', 'Khtml']; // Various browsers...
	for (var i in prefixes) {
		if (typeof e.style[prefixes[i] + propertie] !== 'undefined') {
			$.cssPrefixString[propertie] = prefixes[i];
			return prefixes[i] + propertie;
		}
	}
	return false;
};

// Fix and apply styles on element with correct browsers prefix
// $(e).crossCss({borderRadius:'10px'}) >>> $(e).css({WebkitBorderRadius:'10px'})
$.fn.crossCss = function(css) {
	return this.each(function() { // I've implemented only the one i need, do yours !
		var $this = $(this);
		if (typeof css != 'object') return $this;
		if (css.transition)
			css[$.cssPrefix('Transition')]      = css.transition; // ANIM
		if (css.borderRadius || css.borderRadius === 0)
			css[$.cssPrefix('borderRadius')]    = css.borderRadius;
		if (css.borderImage)
			css[$.cssPrefix('borderImage')]     = css.borderImage;
		if (css.maskImage)
			css[$.cssPrefix('maskImage')]       = css.maskImage;
		if (css.transform)
			css[$.cssPrefix('Transform')]       = css.transform;
		if (css.boxShadow)
			css[$.cssPrefix('boxShadow')]       = css.boxShadow;
		return $this.css(css);
	 });
};

}}}